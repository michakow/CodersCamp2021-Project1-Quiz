(()=>{function e(e){return e&&e.__esModule?e.default:e}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},n={},a={},o=t.parcelRequiredcee;null==o&&((o=function(e){if(e in n)return n[e].exports;if(e in a){var t=a[e];delete a[e];var o={id:e,exports:{}};return n[e]=o,t.call(o.exports,o,o.exports),o.exports}var s=new Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}).register=function(e,t){a[e]=t},t.parcelRequiredcee=o);var s;o.register("lRHpS",(function(e,t){var n,a,o,s,r;n=e.exports,a="getBundleURL",o=()=>r,s=e=>r=e,Object.defineProperty(n,a,{get:o,set:s,enumerable:!0,configurable:!0});var c={};function i(e){return(""+e).replace(/^((?:https?|file|ftp):\/\/.+)\/[^/]+$/,"$1")+"/"}r=function(e){var t=c[e];return t||(t=function(){try{throw new Error}catch(t){var e=(""+t.stack).match(/(https?|file|ftp):\/\/[^)\n]+/g);if(e)return i(e[2])}return"/"}(),c[e]=t),t}})),s=o("lRHpS").getBundleURL("frZfc")+"logo.d47d9aee.png";const r=e=>{const t=JSON.parse(localStorage.getItem("leaderboard")).find((t=>t.categoryName===e))||!1,n=document.querySelector("section");n.innerHTML="",n.className="score-dashboard";const a=document.createElement("div");a.className="container score-dashboard__container";const o=document.createElement("div");o.className=".score-dashboard__group";const s=document.createElement("h3");s.className="score-dashboard__title";const r=t.categoryName?t.categoryName[0].toUpperCase()+t.categoryName.slice(1):e[0].toUpperCase()+e.slice(1);s.appendChild(document.createTextNode(`Score dashboard for ${r}`));const c=document.createElement("ul");c.className="score-dashboard__player-score-list",c.innerHTML=t.players?t.players.map((e=>`<li class="score-dashboard__player-score">\n      <span class="score-dashboard__game-title">${e.name}</span>\n      <span class="score-dashboard__game-title">${e.score}/10</span>\n    </li>`)).join(""):"<p>Leaderboard for this category is empty</p>";const i=document.createElement("button");i.className="button finish__button--back",i.appendChild(document.createTextNode("Back to categories")),o.appendChild(s),o.appendChild(c),o.appendChild(i),a.appendChild(o),n.appendChild(a),i.addEventListener("click",(()=>{_(JSON.parse(sessionStorage.getItem("categories")))}))},c=(e,t,n)=>{const a=document.getElementsByClassName("questions__inner")[0],o=(([...e])=>{let t=e.length;for(;t;){const n=Math.floor(Math.random()*t--);[e[t],e[n]]=[e[n],e[t]]}return e})([...t.incorrect_answers,t.correct_answer]);a.innerHTML=`\n    <h3 class="questions__question">\n    ${e+1}/${n}. ${t.question}</h3>\n    ${o.map((e=>`<button class="button questions__answer">${e}</button>`)).join("")}\n    `;const s=document.querySelectorAll(".questions__answer"),r=e=>e===t.correct_answer.replace(/(&#(\d+);)/g,((e,t,n)=>String.fromCharCode(n)));return new Promise((e=>{const n=n=>{const{target:o}=n;r(o.textContent)?(o.classList.add("questions__answer--correct"),setTimeout((()=>{e(!0)}),1e3),console.log("correct answer")):(o.classList.add("questions__answer--wrong"),document.querySelectorAll(".questions__answer").forEach((e=>{e.textContent===t.correct_answer&&e.classList.add("questions__answer--correct")})),console.log("incorrect answer"),setTimeout((()=>{e(!1)}),1e3)),a()};s.forEach((e=>{e.addEventListener("click",n)}));const a=()=>{s.forEach((e=>{e.removeEventListener("click",n)}))}}))},i=(e,t=0,n)=>{const a=e,o=t,s=n;document.querySelector("#app").innerHTML="<section></section>";const c=document.querySelector("section");c.innerHTML="",c.className="finish";const i=document.createElement("div");i.className="container";const l=document.createElement("div");l.className="finish__result";const d=document.createElement("p");d.appendChild(document.createTextNode("It's over!"));const u=document.createElement("p");u.appendChild(document.createTextNode("Thanks for game :)")),l.appendChild(d),l.appendChild(u);const m=document.createElement("div");m.className="finish__score-group";const p=document.createElement("h3");p.appendChild(document.createTextNode("your score"));const g=document.createElement("span");g.className="finish__score",g.appendChild(document.createTextNode(`${o}/10`)),m.appendChild(p),m.appendChild(g);const h=document.createElement("div");h.className="finish__buttons";const v=document.createElement("button");v.className="button finish__button--back",v.appendChild(document.createTextNode("Back to categories"));const f=document.createElement("button");f.className="button finish__button--scoreboard",f.appendChild(document.createTextNode("Scoreboard")),h.appendChild(v),h.appendChild(f),i.appendChild(l),i.appendChild(m),i.appendChild(h),c.appendChild(i),v.addEventListener("click",(()=>{_(JSON.parse(sessionStorage.getItem("categories")))})),f.addEventListener("click",(()=>{r(s)}));const y=JSON.parse(localStorage.getItem("leaderboard"))||[];y.length&&y.find((e=>e.categoryName===s))?y.find((e=>e.categoryName===s)).players.push({name:a,score:o}):y.push({categoryName:s,players:[{name:a,score:o}]}),localStorage.setItem("leaderboard",JSON.stringify(y))},l=e=>{const t=document.querySelector(".questions");document.querySelector(".questions__timer").style.display="none",t.remove(),clearInterval(e)},d=async(e,t)=>{const n=document.querySelector("section");n.className="questions",n.innerHTML='\n    <div class="container">\n      <div class="questions__timer"></div>\n      <div class="questions__inner"></div>\n    </div>\n  ';const a=e.length;window.points=0;const o=((e,t)=>{const n=document.querySelector(".questions__timer"),a=document.querySelector(".questions");n.textContent="";let o=60;if(o>0){n.textContent="Time left: 1m 00s";const s=setInterval((()=>{o--;let r=Math.floor(o/60),c=Math.floor(o%60);n.textContent=`Time left: ${r}m ${c}s`,o<0&&(clearInterval(s),n.textContent="Time left: 0m 0s",n.style.display="none",a.remove(),i(e,window.points,t))}),1e3);return s}})(window.userName,t);for(let[n,s]of e.entries()){if(await c(n,s,a)&&window.points++,n===a-1)return l(o),i(window.userName,window.points,t)}};window.userName="";const u=async(e,t)=>{const n=e,a=t,o=await(async e=>{try{const t=await fetch(`https://opentdb.com/api_count.php?category=${e}`);if(!t.ok)throw new Error(t.statusText);return(await t.json()).category_question_count}catch(e){console.error(e)}})(n);let s;switch(window.questionsLevel){case"hard":s=o.total_hard_question_count;break;case"medium":s=o.total_medium_question_count;break;default:s=o.total_easy_question_count}document.querySelector("#app").innerHTML=`\n    <section class="game">\n      <div class="container game__inner">\n        <input class="game__user--name" placeholder="Enter your name..." />\n\n        <button class="button game__button--start-quiz">Start Quiz</button>\n        <button class="button game__button--scores">Scores</button>\n        <p class="game__questions-quantity">\n          <span class="game__category-name">${a}</span>\n          <span class="game__total-questions">Total questions: ${o.total_question_count}</span>\n          <span class="game__total-questions-for-level">Questions for ${window.questionsLevel||"easy"} level: ${s}</span>\n        </p>\n        <button class="button game__button--back">Back to categories</button>\n      </div>\n    </section>\n  `;const c=document.getElementsByClassName("game__button--start-quiz")[0];console.log(e);const i=await(async e=>{try{const t=window.questionsLevel||"easy";let n;n=999===e?"https://opentdb.com/api.php?amount=10":`https://opentdb.com/api.php?amount=10&category=${e}&difficulty=${t}`;const a=await fetch(n);if(!a.ok)throw new Error(a.statusText);return(await a.json()).results}catch(e){console.error(e)}})(n);let l;c.addEventListener("click",(()=>{const e=document.querySelector(".game__user--name");window.userName=e.value;var t;if(!((t=window.userName).length<3||!t.match(/^[a-zA-Z]+$/)))d(i,a);else{if(l)return;l=document.createElement("div"),l.classList.add("game__error"),l.appendChild(document.createTextNode("User Name should consist of min 3 LETTERS, and letters only.")),e.parentNode.insertBefore(l,e.nextSibling)}}),!1);document.querySelector(".game__button--scores").addEventListener("click",(()=>{r(a)}));document.querySelector(".game__button--back").addEventListener("click",(()=>{_(JSON.parse(sessionStorage.getItem("categories")))}))},m=[20,14,9,22,10,15,21,30,13,16];var p;p=o("lRHpS").getBundleURL("frZfc")+"quizownia-logo.38ae5559.png";const _=t=>{document.querySelector("#app").innerHTML=`\n    <header>\n      <nav class="navigation">\n        <a href="/" class="navigation__logo">\n          <img\n            src=${e(p)}\n            alt="logo"\n            class="navigation__img"\n          />\n        </a>\n        <div class="navigation__menu">\n          <svg\n            class="navigation__burger"\n            viewBox="0 0 100 80"\n            width="40"\n            height="40"\n          >\n            <rect width="100" height="20" fill="#4d70ff"></rect>\n            <rect y="30" width="100" height="20" fill="#4d70ff"></rect>\n            <rect y="60" width="100" height="20" fill="#4d70ff"></rect>\n          </svg>\n          <div class="navigation__dropdown">\n            <p class="navigation__title">Actual difficulty level: <span id="level" class="navigation__level-name">${window.questionsLevel||"Easy"}</span></p>\n            <ul class="navigation__level-list">\n              <li class="navigation__list-item" data-level="easy">Easy</li>\n              <li class="navigation__list-item" data-level="medium">Medium</li>\n              <li class="navigation__list-item" data-level="hard">Hard</li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </header>\n\n    <section class="category">\n      <div class="container category__container">\n        <div class="category__list">\n        </div>\n      </div>\n    </section>\n  `;const n=document.querySelector(".navigation__burger"),a=document.querySelector(".navigation__dropdown");n.addEventListener("click",(()=>{a.classList.toggle("active")})),document.querySelectorAll(".navigation__list-item").forEach((e=>{e.addEventListener("click",(()=>{window.questionsLevel=e.dataset.level,document.querySelector("#level").textContent=window.questionsLevel,a.classList.remove("active")}))})),((t,n)=>{const a=document.querySelector(n),o=t.filter((e=>m.includes(e.id))).map((t=>`\n            <div class="card category__card" data-id="${t.id}" data-name="${t.name}">\n                <a href="#" class="card__link">\n                <img\n                    src="${e(s)}"\n                    alt="category"\n                    class="card__image"\n                />\n                <h2 class="card__name">${t.name}</h2>\n                </a>\n            </div>`));a.innerHTML=o.join(""),document.querySelectorAll(".category__card").forEach((e=>{e.addEventListener("click",(()=>u(e.dataset.id,e.dataset.name)))}))})(t,".category__list")};window.onload=async()=>{document.querySelector("#app").innerHTML='<div class="lds-dual-ring"></div>';const e=sessionStorage.getItem("categories")?JSON.parse(sessionStorage.getItem("categories")):await(async()=>{try{const e=await fetch("https://opentdb.com/api_category.php");if(!e.ok)throw new Error(e.statusText);const t=await e.json();return sessionStorage.setItem("categories",JSON.stringify(t.trivia_categories)),t.trivia_categories}catch(e){console.error(e)}})();console.log(e),_(e)}})();
//# sourceMappingURL=index.12842598.js.map
