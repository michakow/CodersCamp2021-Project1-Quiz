{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-f3dae54ae109a4ce.js","src/app/leaderboard.js","src/app/renderQuestion.js","src/app/tools.js","src/app/finishQuiz.js","src/app/timer.js","src/app/startQuiz.js","src/app/app.js","src/app/getData.js","src/app/renderCategories.js","node_modules/@parcel/runtime-js/lib/runtime-10f46069ba188ce7.js","src/app/homepage.js","src/app/index.js","src/app/loader.js"],"sourcesContent":["\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('frZfc') + \"logo.d47d9aee.png\";","import { homepage } from './homepage';\n\nexport const showLeaderboard = (category) => {\n  const leaderboard = !localStorage.getItem('leaderboard') === true ? false \n  : JSON.parse(localStorage.getItem('leaderboard')).find(element => element.categoryName === category) || false;\n  \n  //CreateElements - clear section and build new view\n  const section = document.querySelector('section');\n  section.innerHTML = '';\n  section.className = 'score-dashboard';\n\n  const container = document.createElement('div');\n  container.className = 'container score-dashboard__container';\n\n  const scoreDashboard = document.createElement('div');\n  scoreDashboard.className = 'score-dashboard__group';\n\n  const scoreDashboardTitle = document.createElement('h3');\n  scoreDashboardTitle.className = 'score-dashboard__title';\n  const categoryNameFormatted = leaderboard.categoryName\n    ? leaderboard.categoryName[0].toUpperCase() +\n      leaderboard.categoryName.slice(1)\n    : category[0].toUpperCase() + category.slice(1);\n  scoreDashboardTitle.appendChild(\n    document.createTextNode(`Score dashboard for ${categoryNameFormatted}`),\n  );\n\n  const scoreDashboardScoreList = document.createElement('ul');\n  scoreDashboardScoreList.className = 'score-dashboard__player-score-list';\n\n  scoreDashboardScoreList.innerHTML = leaderboard.players\n    ? leaderboard.players\n        .map(\n          (player) =>\n            `<li class=\"score-dashboard__player-score\">\n      <span class=\"score-dashboard__game-title\">${player.name}</span>\n      <span class=\"score-dashboard__game-title\">${player.score}/10</span>\n    </li>`,\n        )\n        .join('')\n    : '<p>Leaderboard for this category is empty</p>';\n\n  const categoriesButton = document.createElement('button');\n  categoriesButton.className = 'button finish__button--back';\n  categoriesButton.appendChild(document.createTextNode('Back to categories'));\n\n  scoreDashboard.appendChild(scoreDashboardTitle);\n  scoreDashboard.appendChild(scoreDashboardScoreList);\n  scoreDashboard.appendChild(categoriesButton);\n\n  container.appendChild(scoreDashboard);\n\n  section.appendChild(container);\n\n  //EventListener - button action\n  categoriesButton.addEventListener('click', () => {\n    homepage(JSON.parse(sessionStorage.getItem('categories')));\n  });\n};\n","import { decodeHtmlCharCodes, shuffle } from './tools.js';\n\nexport const renderQuestion = (questionId, question, questionLength) => {\n  const questionsInner = document.getElementsByClassName('questions__inner')[0];\n\n  const answers = [...question.incorrect_answers, question.correct_answer];\n  const shuffledAnswers = shuffle(answers);\n  \n  questionsInner.innerHTML = `\n    <h3 class=\"questions__question\">\n    ${questionId + 1}/${questionLength}. ${question.question}</h3>\n    ${shuffledAnswers\n      .map((answer) => {\n        return `<button class=\"button questions__answer\">${answer}</button>`;\n      })\n      .join('')}\n    `;\n\n  const answerButtons = document.querySelectorAll('.questions__answer');\n\n  const checkAnswer = (answer) =>\n    answer === decodeHtmlCharCodes(question.correct_answer);\n\n  const showCorrectAnswer = () => {\n    const answerButtons = document.querySelectorAll('.questions__answer');\n\n    answerButtons.forEach((button) => {\n      if (button.textContent === question.correct_answer) {\n        button.classList.add('questions__answer--correct');\n      }\n    });\n  };\n\n  return new Promise((answer) => {\n    const handleUserAnswer = (event) => {\n      const { target } = event;\n\n      if (checkAnswer(target.textContent)) {\n        target.classList.add('questions__answer--correct');\n\n        setTimeout(() => {\n          answer(true);\n        }, 1000);\n        console.log('correct answer');\n      } else {\n        target.classList.add('questions__answer--wrong');\n\n        showCorrectAnswer();\n        console.log('incorrect answer');\n        setTimeout(() => {\n          answer(false);\n        }, 1000);\n      }\n\n      removeListeners();\n    };\n\n    answerButtons.forEach((button) => {\n      button.addEventListener('click', handleUserAnswer);\n    });\n\n    const removeListeners = () => {\n      answerButtons.forEach((button) => {\n        button.removeEventListener('click', handleUserAnswer);\n      });\n    };\n  });\n};\n","// decodeHtmlCharCodes used to decode string like '60&#039;s' to '60's', to compare value in sessionStorage and answer button\n\nexport const decodeHtmlCharCodes = (str) =>\n  str.replace(/(&#(\\d+);)/g, (match, capture, charCode) =>\n    String.fromCharCode(charCode),\n  );\n\nexport const saveDataToSessionStorage = (key, value) => {\n  sessionStorage.setItem(key, value);\n};\n\nexport const shuffle = ([...arr]) => {\n  let m = arr.length;\n  while (m) {\n    const i = Math.floor(Math.random() * m--);\n    [arr[m], arr[i]] = [arr[i], arr[m]];\n  }\n  return arr;\n};\n\n\nexport const validateUserName = (user) => {\n  if (user.length < 3) {\n    return false;\n  }\n  const usernameRegex = /^[a-zA-Z]+$/;\n  const isValid = user.match(usernameRegex);\n  return !!isValid ;\n};\n ","import { homepage } from \"./homepage\";\nimport { showLeaderboard } from \"./leaderboard\";\n\nexport const finishQuiz = (player, score = 0, category) => {\n  const playerName = player;\n  const playerScore = score;\n  const categoryName = category;\n\n  //CreateElements - clear section and build new view\n  const div = document.querySelector('#app');\n  div.innerHTML = `<section></section>`;\n\n  const section = document.querySelector('section');\n  section.innerHTML = '';\n  section.className = 'finish';\n\n  const finishContainer = document.createElement('div');\n  finishContainer.className = 'container';\n\n  const finishHeading = document.createElement('div');\n  finishHeading.className = 'finish__result';\n\n  const firstParagraph = document.createElement('p');\n  firstParagraph.appendChild(document.createTextNode(`It's over!`));\n  const secondParagraph = document.createElement('p');\n  secondParagraph.appendChild(document.createTextNode('Thanks for game :)'));\n\n  finishHeading.appendChild(firstParagraph);\n  finishHeading.appendChild(secondParagraph);\n\n  const scoreResult = document.createElement('div');\n  scoreResult.className = 'finish__score-group';\n\n  const scoreHeading = document.createElement('h3');\n  scoreHeading.appendChild(document.createTextNode('your score'));\n  const scoreSpan = document.createElement('span');\n  scoreSpan.className = 'finish__score';\n  scoreSpan.appendChild(document.createTextNode(`${playerScore}/10`));\n\n  scoreResult.appendChild(scoreHeading);\n  scoreResult.appendChild(scoreSpan);\n\n  const buttonsDiv = document.createElement('div');\n  buttonsDiv.className = 'finish__buttons';\n\n  const categoriesButton = document.createElement('button');\n  categoriesButton.className = 'button finish__button--back';\n  categoriesButton.appendChild(document.createTextNode('Back to categories'));\n  const scoreboardButton = document.createElement('button');\n  scoreboardButton.className = 'button finish__button--scoreboard';\n  scoreboardButton.appendChild(document.createTextNode('Scoreboard'));\n\n  buttonsDiv.appendChild(categoriesButton);\n  buttonsDiv.appendChild(scoreboardButton);\n\n  finishContainer.appendChild(finishHeading);\n  finishContainer.appendChild(scoreResult);\n  finishContainer.appendChild(buttonsDiv);\n\n  section.appendChild(finishContainer);\n\n  //EventListeners - buttons action\n  categoriesButton.addEventListener('click', () => {\n    homepage(JSON.parse(sessionStorage.getItem('categories')));\n  });\n\n  scoreboardButton.addEventListener('click', () => {\n    showLeaderboard(categoryName);\n  });\n\n  //LocalStorage - save player score\n  const leaderboard = JSON.parse(localStorage.getItem('leaderboard')) || [];\n  if (\n    leaderboard.length &&\n    leaderboard.find((element) => element.categoryName === categoryName)\n  ) {\n    leaderboard\n      .find((element) => element.categoryName === categoryName)\n      .players.push({\n        name: playerName,\n        score: playerScore,\n      });\n  } else {\n    leaderboard.push({\n      categoryName,\n      players: [\n        {\n          name: playerName,\n          score: playerScore,\n        },\n      ],\n    });\n  }\n\n  localStorage.setItem('leaderboard', JSON.stringify(leaderboard));\n};\n","import { finishQuiz } from './finishQuiz.js';\n\nexport const startTimer = (userName, categoryName) => {\n  const timer = document.querySelector('.questions__timer');\n  const questions = document.querySelector('.questions');\n\n  timer.textContent = '';\n  const totalTime = 60;\n  let timeleft = totalTime;\n  if (timeleft > 0) {\n    timer.textContent = `Time left: 1m 00s`;\n    const interval = setInterval(() => {\n      timeleft--;\n      let minutes = Math.floor(timeleft / 60);\n      let seconds = Math.floor(timeleft % 60);\n\n      timer.textContent = `Time left: ${minutes}m ${seconds}s`;\n\n      if (timeleft < 0) {\n        clearInterval(interval);\n        timer.textContent = `Time left: 0m 0s`;\n\n        timer.style.display = 'none';\n        questions.remove();\n        finishQuiz(userName, window.points, categoryName);\n      }\n    }, 1000);\n    return interval;\n  }\n};\n\nexport const stopTimer = (timer) => {\n  const questions = document.querySelector('.questions');\n  const timerElem = document.querySelector('.questions__timer');\n  timerElem.style.display = 'none';\n  questions.remove();\n  clearInterval(timer);\n};\n","import { renderQuestion } from './renderQuestion';\nimport { finishQuiz } from './finishQuiz';\nimport { startTimer, stopTimer } from './timer';\n\nexport const startQuiz = async (questionList, categoryName) => {\n  const section = document.querySelector('section');\n  section.className = 'questions';\n  section.innerHTML = `\n    <div class=\"container\">\n      <div class=\"questions__timer\"></div>\n      <div class=\"questions__inner\"></div>\n    </div>\n  `;\n\n  const questionLength = questionList.length;\n  window.points = 0;\n\n  const timer = startTimer(window.userName, categoryName);\n\n  for (let [id, question] of questionList.entries()) {\n    const answer = await renderQuestion(id, question, questionLength);\n    if (answer) window.points++;\n\n    if (id === questionLength - 1) {\n      stopTimer(timer);\n      return finishQuiz(window.userName, window.points, categoryName);\n    }\n  }\n};\n","import { getQuestions, getQuestionTotalCount } from './getData.js';\nimport { homepage } from './homepage.js';\nimport { showLeaderboard } from './leaderboard.js';\n// import { chooseCategory } from './chooseCategory.js';\nimport { startQuiz } from './startQuiz.js';\nimport { validateUserName } from './tools.js';\n\nwindow.userName = '';\n\nexport const startApp = async (id, name) => {\n  const categoryID = id;\n  const categoryName = name;\n\n  const questionCount = await getQuestionTotalCount(categoryID);\n\n  let questionCountForLevel;\n  switch(window.questionsLevel){\n    case 'hard': \n      questionCountForLevel = questionCount.total_hard_question_count;\n      break;\n    case 'medium':\n      questionCountForLevel = questionCount.total_medium_question_count;\n      break;\n    default: \n      questionCountForLevel = questionCount.total_easy_question_count;\n  }\n\n  const div = document.querySelector('#app');\n  div.innerHTML = `\n    <section class=\"game\">\n      <div class=\"container game__inner\">\n        <div class=\"game__header\">\n        <input class=\"game__user--name\" placeholder=\"Enter your name...\" />\n        <button class=\"button game__button--start-quiz\">Start Quiz</button>\n        <button class=\"button game__button--scores\">Scores</button>\n        <p class=\"game__questions-quantity\">\n          <span class=\"game__category-name\">${categoryName}</span>\n          <span class=\"game__total-questions\">Total questions: ${questionCount.total_question_count}</span>\n          <span class=\"game__total-questions-for-level\">Questions for ${window.questionsLevel || 'easy'} level: ${questionCountForLevel}</span>\n        </p>\n        </div>\n        <button class=\"button game__button--back\">Back to categories</button>\n      </div>\n    </section>\n  `;\n\n  const startButton = document.getElementsByClassName(\n    'game__button--start-quiz',\n  )[0];\n\n  // TODO add chooseCategory function here\n  // const categoryId = chooseCategory();\n  // until chooseCategory is finished use id\n  console.log(id);\n  const questionList = await getQuestions(categoryID);\n  let errorText;\n\n  startButton.addEventListener(\n    'click',\n    () => {\n      //TODO validate username\n      const userInput = document.querySelector('.game__user--name');\n      window.userName = userInput.value;\n      const isValidUser = validateUserName(window.userName);\n      if (isValidUser) {\n        startQuiz(questionList, categoryName);\n      } else {\n        if (errorText) {\n          return;\n        }\n        errorText = document.createElement('div');\n        errorText.classList.add('game__error');\n        errorText.appendChild(\n          document.createTextNode(\n            'User Name should consist of min 3 LETTERS, and letters only.',\n          ),\n        );\n        userInput.parentNode.insertBefore(errorText, userInput.nextSibling);\n      }\n    },\n    false,\n  );\n\n  const scoreButton = document.querySelector('.game__button--scores');\n  scoreButton.addEventListener('click', () => {\n    showLeaderboard(categoryName);\n  });\n\n  const backButton = document.querySelector('.game__button--back');\n  backButton.addEventListener('click', () => {\n    homepage(JSON.parse(sessionStorage.getItem('categories')));\n  });\n};\n","export const getCategories = async () => {\n  try {\n    const res = await fetch('https://opentdb.com/api_category.php');\n    if (!res.ok) throw new Error(res.statusText);\n    const data = await res.json();\n    sessionStorage.setItem(\n      'categories',\n      JSON.stringify(data.trivia_categories),\n    );\n    return data.trivia_categories;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getQuestions = async (categoryID) => {\n  try {\n    const questionsLevel = window.questionsLevel || 'easy';\n    let path;\n    if (categoryID === 999) {\n      path = 'https://opentdb.com/api.php?amount=10';\n    } else {\n      path = `https://opentdb.com/api.php?amount=10&category=${categoryID}&difficulty=${questionsLevel}`;\n    }\n    const res = await fetch(path);\n\n    if (!res.ok) throw new Error(res.statusText);\n    const data = await res.json();\n    // sessionStorage.setItem(\n    //   'questions',\n    //   JSON.stringify(data.results),\n    // );\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getQuestionTotalCount = async (categoryID) => {\n  try {\n    const res = await fetch(`https://opentdb.com/api_count.php?category=${categoryID}`);\n\n    if (!res.ok) throw new Error(res.statusText);\n    const data = await res.json();\n    return data.category_question_count;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// export const getQuiz = (categoryID) => {\n//   fetch(`https://opentdb.com/api_count.php?category=${categoryID}`)\n//   .then(res => res.json())\n//   .then(data => console.log(data))\n// }\n// jak zrobić return z tego ?\n","import logo from '/src/images/logo.png';\nimport { startApp } from './app.js';\n\nconst SELECTED_CATEGORY_IDS = [20, 14, 9, 22, 10, 15, 21, 30, 13, 16];\n\nexport const renderCategories = (categories, parentSelector) => {\n  const parent = document.querySelector(parentSelector);\n  const tiles = categories\n    .filter((category) => SELECTED_CATEGORY_IDS.includes(category.id))\n    .map(\n      (category) => `\n            <div class=\"card category__card\" data-id=\"${category.id}\" data-name=\"${category.name}\">\n                <a href=\"#\" class=\"card__link\">\n                <img\n                    src=\"${logo}\"\n                    alt=\"category\"\n                    class=\"card__image\"\n                />\n                <h2 class=\"card__name\">${category.name}</h2>\n                </a>\n            </div>`,\n    );\n\n  parent.innerHTML = tiles.join('');\n\n  //temporary solution\n  document.querySelectorAll('.category__card').forEach((card) => {\n    card.addEventListener('click', () =>\n      startApp(card.dataset.id, card.dataset.name),\n    );\n  });\n};\n","module.exports = require('./helpers/bundle-url').getBundleURL('frZfc') + \"quizownia-logo.38ae5559.png\";","import { renderCategories } from './renderCategories.js';\nimport logo from '/src/images/quizownia-logo.png';\n\nexport const homepage = (categories) => {\n  const div = document.querySelector('#app');\n  div.innerHTML = `\n    <header>\n      <nav class=\"navigation\">\n        <a href=\"/\" class=\"navigation__logo\">\n          <img\n            src=${logo}\n            alt=\"logo\"\n            class=\"navigation__img\"\n          />\n        </a>\n        <div class=\"navigation__menu\">\n          <svg\n            class=\"navigation__burger\"\n            viewBox=\"0 0 100 80\"\n            width=\"40\"\n            height=\"40\"\n          >\n            <rect width=\"100\" height=\"20\" fill=\"#4d70ff\"></rect>\n            <rect y=\"30\" width=\"100\" height=\"20\" fill=\"#4d70ff\"></rect>\n            <rect y=\"60\" width=\"100\" height=\"20\" fill=\"#4d70ff\"></rect>\n          </svg>\n          <div class=\"navigation__dropdown\">\n            <p class=\"navigation__title\">Actual difficulty level: <span id=\"level\" class=\"navigation__level-name\">${window.questionsLevel || 'Easy'}</span></p>\n            <ul class=\"navigation__level-list\">\n              <li class=\"navigation__list-item\" data-level=\"easy\">Easy</li>\n              <li class=\"navigation__list-item\" data-level=\"medium\">Medium</li>\n              <li class=\"navigation__list-item\" data-level=\"hard\">Hard</li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </header>\n\n    <section class=\"category\">\n      <div class=\"container category__container\">\n        <div class=\"category__list\">\n        </div>\n      </div>\n    </section>\n  `;\n\n  const menuButton = document.querySelector('.navigation__burger');\n  const dropdown = document.querySelector('.navigation__dropdown');\n  menuButton.addEventListener('click', () => {\n    dropdown.classList.toggle(\"active\");\n  });\n\n  document.querySelectorAll('.navigation__list-item').forEach(item => {\n    item.addEventListener('click', () => {\n      window.questionsLevel = item.dataset.level;\n      document.querySelector('#level').textContent = window.questionsLevel;\n      dropdown.classList.remove(\"active\");\n    });\n  });\n\n  renderCategories(categories, '.category__list');\n};\n","import { getCategories } from './getData.js';\nimport { homepage } from './homepage.js';\nimport { loader } from './loader.js';\n\nwindow.onload = async () => {\n  loader();\n\n  // Here goes logic:\n  const categories = sessionStorage.getItem('categories')\n    ? JSON.parse(sessionStorage.getItem('categories'))\n    : await getCategories();\n\n  homepage(categories);\n};\n","export const loader = () => {\n  const parent = document.querySelector('#app');\n  const loader = `<div class=\"lds-dual-ring\"></div>`;\n\n  parent.innerHTML = loader;\n};\n"],"names":["$feb039d0dc4b7e75$export$bdfd709ae4826697","$feb039d0dc4b7e75$var$bundleURL","$feb039d0dc4b7e75$var$getBaseURL","url","replace","id","value","Error","err","matches","stack","match","$feb039d0dc4b7e75$var$getBundleURL","$dde707c9a063adfb$exports","parcelRequire","getBundleURL","$5c6d8ca62532fd82$export$3acec85c603510fd","category","leaderboard","localStorage","getItem","JSON","parse","find","element","categoryName","section","document","querySelector","innerHTML","className","container","createElement","scoreDashboard","scoreDashboardTitle","categoryNameFormatted","toUpperCase","slice","appendChild","createTextNode","scoreDashboardScoreList","players","map","player","name","score","join","categoriesButton","addEventListener","$32d2adea6c0b7805$export$1e85c6cc1ce7630a","questionId","question","questionLength","questionsInner","getElementsByClassName","shuffledAnswers","arr","m","length","i","Math","floor","random","$d9cf4ee57cdd746b$export$448332262467e042","incorrect_answers","correct_answer","answer","answerButtons1","querySelectorAll","checkAnswer","capture","charCode","String","fromCharCode","event","target","textContent","classList","add","setTimeout","console","log","forEach","button","removeListeners","handleUserAnswer","removeEventListener","$802351d6cc09f673$export$85787429b4cb5fd8","playerName","playerScore","finishContainer","finishHeading","firstParagraph","secondParagraph","scoreResult","scoreHeading","scoreSpan","buttonsDiv","scoreboardButton","$30aabf7c2519489b$export$4cec2234a9c7ce6d","sessionStorage","push","setItem","stringify","$2d6dcb5d3d1fe385$export$4d41f7386211339a","timer","questions","style","display","remove","clearInterval","$ff7139390ac1e00f$export$35dfb1dce4536b10","async","questionList","points","userName","timeleft","interval","setInterval","minutes","seconds","window","$2d6dcb5d3d1fe385$export$5985f5b4428bec55","entries","$a5b095e7e5b617cd$export$e820db9e9e2fc09b","categoryID","questionCount","res","fetch","ok","statusText","json","category_question_count","error","$ac016b97cd97ce14$export$993a24ab29e7b779","questionCountForLevel","questionsLevel","total_hard_question_count","total_medium_question_count","total_easy_question_count","total_question_count","path","results","$ac016b97cd97ce14$export$2a26a8aebba7a5b5","errorText","userInput","user","$af170c16392e9b40$var$SELECTED_CATEGORY_IDS","$b23b2e58fc023d33$exports","categories","$parcel$interopDefault","parentSelector","parent","tiles","filter","includes","onload","data","trivia_categories","$ac016b97cd97ce14$export$7a0f33e8df10bd94"],"version":3,"file":"index.ddf3dea4.js.map","sourceRoot":"../"}