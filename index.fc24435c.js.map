{"mappings":"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","sources":["src/app/getData.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-60e30729a3b98cb9.js","src/app/leaderboard.js","src/app/renderQuestion.js","src/app/tools.js","src/app/finishQuiz.js","src/app/timer.js","src/app/startQuiz.js","src/app/loader.js","src/app/app.js","src/app/renderCategories.js","node_modules/@parcel/runtime-js/lib/runtime-db98ea42a1edab3f.js","src/app/homepage.js","src/app/index.js"],"sourcesContent":["export const getCategories = async () => {\n  try {\n    const res = await fetch('https://opentdb.com/api_category.php');\n    if (!res.ok) throw new Error(res.statusText);\n    const data = await res.json();\n    sessionStorage.setItem(\n      'categories',\n      JSON.stringify(data.trivia_categories),\n    );\n    return data.trivia_categories;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getQuestions = async (categoryID, token, questionCountForLevel) => {\n  try {\n    const questionsLevel = window.questionsLevel || 'easy';\n    const amount = questionCountForLevel < 10 ? questionCountForLevel : 10; \n    let path;\n    if (categoryID === 999) {\n      path = 'https://opentdb.com/api.php?amount=10';\n    } else {\n      path = `https://opentdb.com/api.php?amount=${amount}&category=${categoryID}&difficulty=${questionsLevel}&token=${token}`;\n    }\n    const res = await fetch(path);\n\n    if (!res.ok) throw new Error(res.statusText);\n\n    const data = await res.json();\n\n    if(data.response_code !== 0) {\n      const newToken = await getToken();\n      return await getQuestions(categoryID, newToken, questionCountForLevel);\n    } \n    // sessionStorage.setItem(\n    //   'questions',\n    //   JSON.stringify(data.results),\n    // );\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getQuestionTotalCount = async (categoryID) => {\n  try {\n    const res = await fetch(`https://opentdb.com/api_count.php?category=${categoryID}`);\n\n    if (!res.ok) throw new Error(res.statusText);\n    const data = await res.json();\n    return data.category_question_count;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// export const getQuiz = (categoryID) => {\n//   fetch(`https://opentdb.com/api_count.php?category=${categoryID}`)\n//   .then(res => res.json())\n//   .then(data => console.log(data))\n// }\n// jak zrobiÄ‡ return z tego ?\n\nexport const getToken = async () => {\n  try {\n    const res = await fetch('https://opentdb.com/api_token.php?command=request');\n    if (!res.ok) throw new Error(res.statusText);\n    const data = await res.json();\n    sessionStorage.setItem(\n      'token',\n      JSON.stringify(data.token),\n    );\n    return data.token;\n  } catch (error) {\n    console.error(error);\n  }\n};","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('gDSzJ') + \"logo.d47d9aee.png\";","import { homepage } from './homepage';\n\nexport const showLeaderboard = (category, questionsLength) => {\n  const leaderboard = !localStorage.getItem('leaderboard') === true ? false \n  : JSON.parse(localStorage.getItem('leaderboard')).find(element => element.categoryName === category) || false;\n\n  const quizLevel = window.questionsLevel || 'easy';\n  \n  //CreateElements - clear section and build new view\n  const section = document.querySelector('section');\n  section.innerHTML = '';\n  section.className = 'score-dashboard';\n\n  const container = document.createElement('div');\n  container.className = 'container score-dashboard__container';\n\n  const scoreDashboard = document.createElement('div');\n  scoreDashboard.className = 'score-dashboard__group';\n\n  const scoreDashboardTitle = document.createElement('h3');\n  scoreDashboardTitle.className = 'score-dashboard__title';\n  const categoryNameFormatted = leaderboard.categoryName\n    ? leaderboard.categoryName[0].toUpperCase() +\n      leaderboard.categoryName.slice(1)\n    : category[0].toUpperCase() + category.slice(1);\n  scoreDashboardTitle.appendChild(\n    document.createTextNode(`Score dashboard for ${categoryNameFormatted} (${quizLevel})`),\n  );\n\n  const scoreDashboardScoreList = document.createElement('ul');\n  scoreDashboardScoreList.className = 'score-dashboard__player-score-list';\n\n  scoreDashboardScoreList.innerHTML = !leaderboard.players\n    ? '<p>Leaderboard for this category is empty</p>'\n    : (leaderboard.players.filter(player => player.level === quizLevel)).length === 0\n      ? '<p>Leaderboard for this level is empty</p>'\n      : leaderboard.players.filter(player => player.level === quizLevel)\n        .map(\n          (player) =>\n            `<li class=\"score-dashboard__player-score\">\n              <span class=\"score-dashboard__game-title\">${player.name}</span>\n              <span class=\"score-dashboard__game-title\">${player.score}/${questionsLength}</span>\n            </li>`,\n        )\n        .join('');\n\n  const categoriesButton = document.createElement('button');\n  categoriesButton.className = 'button finish__button--back';\n  categoriesButton.appendChild(document.createTextNode('Back to categories'));\n\n  scoreDashboard.appendChild(scoreDashboardTitle);\n  scoreDashboard.appendChild(scoreDashboardScoreList);\n  scoreDashboard.appendChild(categoriesButton);\n\n  container.appendChild(scoreDashboard);\n\n  section.appendChild(container);\n\n  //EventListener - button action\n  categoriesButton.addEventListener('click', () => {\n    homepage(JSON.parse(sessionStorage.getItem('categories')));\n  });\n};\n","import { htmlEntities, shuffle } from './tools.js';\n\nexport const renderQuestion = (questionId, question, questionLength) => {\n  const questionsInner = document.getElementsByClassName('questions__inner')[0];\n\n  const answers = [...question.incorrect_answers, question.correct_answer];\n\n  const shuffledAnswers = shuffle(answers);\n\n  questionsInner.innerHTML = `\n    <h3 class=\"questions__question\">\n    ${questionId + 1}/${questionLength}. ${question.question}</h3>\n    ${shuffledAnswers\n      .map((answer) => {\n        return `<button class=\"button questions__answer\">${answer}</button>`;\n      })\n      .join('')}\n    `;\n\n  const answerButtons = document.querySelectorAll('.questions__answer');\n\n  const checkAnswer = (answer) =>\n    htmlEntities(answer) === question.correct_answer;\n\n  const showCorrectAnswer = () => {\n    const answerButtons = document.querySelectorAll('.questions__answer');\n\n    answerButtons.forEach((button) => {\n      if (button.textContent === question.correct_answer) {\n        button.classList.add('questions__answer--correct');\n      }\n    });\n  };\n\n  return new Promise((answer) => {\n    const handleUserAnswer = (event) => {\n      const { target } = event;\n\n      if (checkAnswer(target.textContent)) {\n        target.classList.add('questions__answer--correct');\n\n        setTimeout(() => {\n          answer(true);\n        }, 1000);\n      } else {\n        target.classList.add('questions__answer--wrong');\n\n        showCorrectAnswer();\n        setTimeout(() => {\n          answer(false);\n        }, 1000);\n      }\n\n      removeListeners();\n    };\n\n    answerButtons.forEach((button) => {\n      button.addEventListener('click', handleUserAnswer);\n    });\n\n    const removeListeners = () => {\n      answerButtons.forEach((button) => {\n        button.removeEventListener('click', handleUserAnswer);\n      });\n    };\n  });\n};\n","// decodeHtmlCharCodes used to decode string like '60&#039;s' to '60's', to compare correctAnswer and answer button\n\nexport const decodeHtmlCharCodes = (str) =>\n  str.replace(/(&#(\\d+);)/g, (match, capture, charCode) =>\n    String.fromCharCode(charCode),\n  );\n\n// decodeHtmlCharCodes used to convert special characters (like <) into their escaped/encoded values (like &lt;)\nexport const htmlEntities = (str) => {\n  return String(str)\n    .replace(/&/g, '&amp;')\n    .replace(/'/g, '&#039;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/Ã¡/g, '&aacute;')\n    .replace(/Ã©/g, '&eacute;')\n    .replace(/Ã­/g, '&iacute;')\n    .replace(/Ã³/g, '&oacute;')\n    .replace(/Ãº/g, '&uacute;');\n};\n\nexport const saveDataToSessionStorage = (key, value) => {\n  sessionStorage.setItem(key, value);\n};\n\nexport const shuffle = ([...arr]) => {\n  let m = arr.length;\n  while (m) {\n    const i = Math.floor(Math.random() * m--);\n    [arr[m], arr[i]] = [arr[i], arr[m]];\n  }\n  return arr;\n};\n\nexport const validateUserName = (user) => {\n  if (user.length < 3) {\n    return false;\n  }\n  const usernameRegex = /^[a-zA-Z]+$/;\n  const isValid = user.match(usernameRegex);\n  return !!isValid;\n};\n","import { homepage } from \"./homepage\";\nimport { showLeaderboard } from \"./leaderboard\";\n\nexport const finishQuiz = (player, score = 0, category, questionsLength) => {\n  const playerName = player;\n  const playerScore = score;\n  const categoryName = category;\n  const quizLevel = window.questionsLevel || 'easy';\n\n  //CreateElements - clear section and build new view\n  const div = document.querySelector('#app');\n  div.innerHTML = `<section></section>`;\n\n  const section = document.querySelector('section');\n  section.innerHTML = '';\n  section.className = 'finish';\n\n  const finishContainer = document.createElement('div');\n  finishContainer.className = 'container';\n\n  const finishHeading = document.createElement('div');\n  finishHeading.className = 'finish__result';\n\n  const firstParagraph = document.createElement('p');\n  firstParagraph.appendChild(document.createTextNode(`It's over!`));\n  const secondParagraph = document.createElement('p');\n  secondParagraph.appendChild(document.createTextNode('Thanks for game :)'));\n\n  finishHeading.appendChild(firstParagraph);\n  finishHeading.appendChild(secondParagraph);\n\n  const scoreResult = document.createElement('div');\n  scoreResult.className = 'finish__score-group';\n\n  const scoreHeading = document.createElement('h3');\n  scoreHeading.appendChild(document.createTextNode('your score'));\n  const scoreSpan = document.createElement('span');\n  scoreSpan.className = 'finish__score';\n  scoreSpan.appendChild(document.createTextNode(`${playerScore}/${questionsLength}`));\n\n  scoreResult.appendChild(scoreHeading);\n  scoreResult.appendChild(scoreSpan);\n\n  const buttonsDiv = document.createElement('div');\n  buttonsDiv.className = 'finish__buttons';\n\n  const categoriesButton = document.createElement('button');\n  categoriesButton.className = 'button finish__button--back';\n  categoriesButton.appendChild(document.createTextNode('Back to categories'));\n  const scoreboardButton = document.createElement('button');\n  scoreboardButton.className = 'button finish__button--scoreboard';\n  scoreboardButton.appendChild(document.createTextNode('Scoreboard'));\n\n  buttonsDiv.appendChild(categoriesButton);\n  buttonsDiv.appendChild(scoreboardButton);\n\n  finishContainer.appendChild(finishHeading);\n  finishContainer.appendChild(scoreResult);\n  finishContainer.appendChild(buttonsDiv);\n\n  section.appendChild(finishContainer);\n\n  //EventListeners - buttons action\n  categoriesButton.addEventListener('click', () => {\n    homepage(JSON.parse(sessionStorage.getItem('categories')));\n  });\n\n  scoreboardButton.addEventListener('click', () => {\n    showLeaderboard(categoryName, questionsLength);\n  });\n\n  //LocalStorage - save player score\n  const leaderboard = JSON.parse(localStorage.getItem('leaderboard')) || [];\n  if (\n    leaderboard.length &&\n    leaderboard.find((element) => element.categoryName === categoryName)\n  ) {\n    leaderboard\n      .find((element) => element.categoryName === categoryName)\n      .players.push({\n        name: playerName,\n        score: playerScore,\n        level: quizLevel,\n      });\n  } else {\n    leaderboard.push({\n      categoryName,\n      players: [\n        {\n          name: playerName,\n          score: playerScore,\n          level: quizLevel,\n        },\n      ],\n    });\n  }\n\n  localStorage.setItem('leaderboard', JSON.stringify(leaderboard));\n};\n","import { finishQuiz } from './finishQuiz.js';\n\nexport const startTimer = (userName, categoryName, questionLength) => {\n  const timer = document.querySelector('.questions__timer');\n  const questions = document.querySelector('.questions');\n\n  timer.textContent = '';\n  const totalTime = 60;\n  let timeleft = totalTime;\n  if (timeleft > 0) {\n    timer.textContent = `Time left: 1m 00s`;\n    const interval = setInterval(() => {\n      timeleft--;\n      let minutes = Math.floor(timeleft / 60);\n      let seconds = Math.floor(timeleft % 60);\n\n      timer.textContent = `Time left: ${minutes}m ${seconds}s`;\n\n      if (timeleft < 0) {\n        clearInterval(interval);\n        timer.textContent = `Time left: 0m 0s`;\n\n        timer.style.display = 'none';\n        questions.remove();\n        finishQuiz(userName, window.points, categoryName, questionLength);\n      }\n    }, 1000);\n    return interval;\n  }\n};\n\nexport const stopTimer = (timer) => {\n  const questions = document.querySelector('.questions');\n  const timerElem = document.querySelector('.questions__timer');\n  timerElem.style.display = 'none';\n  questions.remove();\n  clearInterval(timer);\n};\n","import { renderQuestion } from './renderQuestion';\nimport { finishQuiz } from './finishQuiz';\nimport { startTimer, stopTimer } from './timer';\n\nexport const startQuiz = async (questionList, categoryName) => {\n  const section = document.querySelector('section');\n  section.className = 'questions';\n  section.innerHTML = `\n    <div class=\"container\">\n      <div class=\"questions__timer\"></div>\n      <div class=\"questions__inner\"></div>\n    </div>\n  `;\n\n  const questionLength = questionList.length;\n  window.points = 0;\n\n  const timer = startTimer(window.userName, categoryName, questionLength);\n\n  for (let [id, question] of questionList.entries()) {\n    const answer = await renderQuestion(id, question, questionLength);\n    if (answer) window.points++;\n\n    if (id === questionLength - 1) {\n      stopTimer(timer);\n      return finishQuiz(window.userName, window.points, categoryName, questionLength);\n    }\n  }\n};\n","export const loader = () => {\n  const parent = document.querySelector('#app');\n  const loader = `<div class=\"lds-dual-ring\"></div>`;\n  parent.innerHTML = loader;\n};\n","import { getQuestions, getQuestionTotalCount, getToken } from './getData.js';\nimport { homepage } from './homepage.js';\nimport { showLeaderboard } from './leaderboard.js';\nimport { startQuiz } from './startQuiz.js';\nimport { validateUserName } from './tools.js';\nimport { loader } from './loader.js';\n\nwindow.userName = '';\n\nexport const startApp = async (id, name) => {\n  const categoryID = id;\n  const categoryName = name;\n  const token = sessionStorage.getItem('token') \n  ? JSON.parse(sessionStorage.getItem('token')) \n  : await getToken();\n\n  loader();\n  const questionCount = await getQuestionTotalCount(categoryID);\n\n  let questionCountForLevel;\n  switch (window.questionsLevel) {\n    case 'hard':\n      questionCountForLevel = questionCount.total_hard_question_count;\n      break;\n    case 'medium':\n      questionCountForLevel = questionCount.total_medium_question_count;\n      break;\n    default:\n      questionCountForLevel = questionCount.total_easy_question_count;\n  }\n\n  const div = document.querySelector('#app');\n  div.innerHTML = `\n    <section class=\"game\">\n      <div class=\"container game__inner\">\n        <div class=\"game__header\">\n        <input class=\"game__user--name\" placeholder=\"Enter your name...\" />\n        <button class=\"button game__button--start-quiz\">Start Quiz</button>\n        <button class=\"button game__button--scores\">Scores</button>\n        <p class=\"game__questions-quantity\">\n          <span class=\"game__category-name\">${categoryName}</span>\n          <span class=\"game__total-questions\">Total questions: ${\n            questionCount.total_question_count\n          }</span>\n          <span class=\"game__total-questions-for-level\">Questions for ${\n            window.questionsLevel || 'easy'\n          } level: ${questionCountForLevel}</span>\n        </p>\n        </div>\n        <button class=\"button game__button--back\">Back to categories</button>\n      </div>\n    </section>\n  `;\n\n  const startButton = document.getElementsByClassName(\n    'game__button--start-quiz',\n  )[0];\n\n  // TODO add chooseCategory function here\n  // const categoryId = chooseCategory();\n  // until chooseCategory is finished use id\n  console.log(id);\n  const questionList = await getQuestions(categoryID, token, questionCountForLevel);\n  let errorText;\n\n  startButton.addEventListener(\n    'click',\n    () => {\n      const userInput = document.querySelector('.game__user--name');\n      window.userName = userInput.value;\n      const isValidUser = validateUserName(window.userName);\n      if (isValidUser) {\n        startQuiz(questionList, categoryName);\n      } else {\n        if (errorText) {\n          return;\n        }\n        errorText = document.createElement('div');\n        errorText.classList.add('game__error');\n        errorText.appendChild(\n          document.createTextNode(\n            'User Name should consist of min 3 LETTERS, and letters only.',\n          ),\n        );\n        userInput.parentNode.insertBefore(errorText, userInput.nextSibling);\n      }\n    },\n    false,\n  );\n\n  const scoreButton = document.querySelector('.game__button--scores');\n  scoreButton.addEventListener('click', () => {\n    showLeaderboard(categoryName, questionList.length);\n  });\n\n  const backButton = document.querySelector('.game__button--back');\n  backButton.addEventListener('click', () => {\n    homepage(JSON.parse(sessionStorage.getItem('categories')));\n  });\n};\n","import logo from '/src/images/logo.png';\nimport { startApp } from './app.js';\n\n// const SELECTED_CATEGORY_IDS = [20, 14, 9, 22, 10, 15, 21, 30, 13, 16];\n//Object with ids and matched svg icons\n\nconst SELECTED_CATEGORY_IDS = [\n    {\n      id: 20,\n      svg: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 14v3m4-3v3m4-3v3M3 21h18M3 10h18M3 7l9-4 9 4M4 10h16v11H4V10z\" />\n    </svg>    \n    `,\n    },\n    {\n      id: 14,\n      svg: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n    </svg>    \n  `,\n    },\n    {\n      id: 9,\n      svg: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path d=\"M12 14l9-5-9-5-9 5 9 5z\" />\n    <path d=\"M12 14l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14z\" />\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 14l9-5-9-5-9 5 9 5zm0 0l6.16-3.422a12.083 12.083 0 01.665 6.479A11.952 11.952 0 0012 20.055a11.952 11.952 0 00-6.824-2.998 12.078 12.078 0 01.665-6.479L12 14zm-4 6v-7.5l4-2.222\" />\n  </svg>\n  `,\n    },\n    {\n      id: 22,\n      svg: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n    </svg>    \n  `,\n    },\n    {\n      id: 10,\n      svg: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n    </svg>    \n  `,\n    },\n    {\n      id: 15,\n      svg: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v13m0-13V6a2 2 0 112 2h-2zm0 0V5.5A2.5 2.5 0 109.5 8H12zm-7 4h14M5 12a2 2 0 110-4h14a2 2 0 110 4M5 12v7a2 2 0 002 2h10a2 2 0 002-2v-7\" />\n    </svg>    \n  `,\n    },\n    {\n      id: 21,\n      svg: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9\" />\n    </svg>    \n  `,\n    },\n    {\n      id: 30,\n      svg: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\" />\n    </svg>    \n  `,\n    },\n    {\n      id: 13,\n      svg: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\" />\n    </svg>    \n  `,\n    },\n    {\n      id: 16,\n      svg: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 4a2 2 0 114 0v1a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1a2 2 0 100 4h1a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1a2 2 0 10-4 0v1a1 1 0 01-1 1H7a1 1 0 01-1-1v-3a1 1 0 00-1-1H4a2 2 0 110-4h1a1 1 0 001-1V7a1 1 0 011-1h3a1 1 0 001-1V4z\" />\n    </svg>    \n  `,\n    },\n  ];\n  \n\n  export const renderCategories = (categories, parentSelector) => {\n    const parent = document.querySelector(parentSelector);\n    let tiles = [];\n    for (object of SELECTED_CATEGORY_IDS) {\n      tiles.push(\n        categories\n          .filter((category) => Object.values(object).includes(category.id))\n          .map(\n            (category) => \n             `\n                <div class=\"card category__card\" data-id=\"${category.id}\" data-name=\"${category.name}\">\n                    <a href=\"#\" class=\"card__link\">\n                    <div\n                    class=\"card__image\">${object.svg}\n                    </div>\n                    <h2 class=\"card__name\">${category.name}</h2>\n                    </a>\n                </div>`,\n          ),\n      );\n    }\n  \n    parent.innerHTML = tiles.join('');\n  \n    //temporary solution\n    document.querySelectorAll('.category__card').forEach((card) => {\n      card.addEventListener('click', () =>\n        startApp(card.dataset.id, card.dataset.name),\n      );\n    });\n  };\n","module.exports = require('./helpers/bundle-url').getBundleURL('gDSzJ') + \"quizownia-logo.38ae5559.png\";","import { renderCategories } from './renderCategories.js';\nimport logo from '/src/images/quizownia-logo.png';\n\nexport const homepage = (categories) => {\n  const div = document.querySelector('#app');\n  div.innerHTML = `\n    <header>\n      <nav class=\"navigation\">\n        <a href=\"https://michakow.github.io/CodersCamp2021-Project1-Quiz/\" class=\"navigation__logo\">\n          <img\n            src=${logo}\n            alt=\"logo\"\n            class=\"navigation__img\"\n          />\n        </a>\n        <div class=\"navigation__menu\">\n          <svg\n            class=\"navigation__burger\"\n            viewBox=\"0 0 100 80\"\n            width=\"40\"\n            height=\"40\"\n          >\n            <rect width=\"100\" height=\"20\" fill=\"#4d70ff\"></rect>\n            <rect y=\"30\" width=\"100\" height=\"20\" fill=\"#4d70ff\"></rect>\n            <rect y=\"60\" width=\"100\" height=\"20\" fill=\"#4d70ff\"></rect>\n          </svg>\n          <div class=\"navigation__dropdown\">\n            <p class=\"navigation__title\">Actual difficulty level: <span id=\"level\" class=\"navigation__level-name\">${\n              window.questionsLevel || 'Easy'\n            }</span></p>\n            <ul class=\"navigation__level-list\">\n              <li class=\"navigation__list-item\" data-level=\"easy\">Easy</li>\n              <li class=\"navigation__list-item\" data-level=\"medium\">Medium</li>\n              <li class=\"navigation__list-item\" data-level=\"hard\">Hard</li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </header>\n\n    <section class=\"category\">\n      <div class=\"container category__container\">\n        <div class=\"category__list\">\n        </div>\n      </div>\n    </section>\n  `;\n\n  const menuButton = document.querySelector('.navigation__burger');\n  const dropdown = document.querySelector('.navigation__dropdown');\n  console.log(menuButton);\n  console.log(dropdown);\n  // menuButton.addEventListener('click', () => {\n  //   dropdown.classList.toggle('active');\n  // });\n\n  document.querySelectorAll('.navigation__list-item').forEach((item) => {\n    item.addEventListener('click', () => {\n      window.questionsLevel = item.dataset.level;\n      document.querySelector('#level').textContent = window.questionsLevel;\n      // dropdown.classList.remove('active');\n    });\n  });\n\n  renderCategories(categories, '.category__list');\n};\n","import { getCategories } from './getData.js';\nimport { homepage } from './homepage.js';\nimport { loader } from './loader.js';\n\nwindow.onload = async () => {\n  loader();\n\n  // Here goes logic:\n  const categories = sessionStorage.getItem('categories')\n    ? JSON.parse(sessionStorage.getItem('categories'))\n    : await getCategories();\n\n  homepage(categories);\n};\n"],"names":["$59465b5b3b32bbbd$export$2a26a8aebba7a5b5","async","categoryID","token","questionCountForLevel","questionsLevel","window","amount","path","res","fetch","ok","Error","statusText","data","json","response_code","newToken","$59465b5b3b32bbbd$export$257b2d10b709d8ef","results","error","console","sessionStorage","setItem","JSON","stringify","$22e0b7685c30f771$export$bdfd709ae4826697","$22e0b7685c30f771$var$bundleURL","$22e0b7685c30f771$var$getBaseURL","url","replace","id","value","err","matches","stack","match","$22e0b7685c30f771$var$getBundleURL","parcelRequire","getBundleURL","$aae9aeadbb0ca85b$export$3acec85c603510fd","category","questionsLength","leaderboard","localStorage","getItem","parse","find","element","categoryName","quizLevel","section","document","querySelector","innerHTML","className","container","createElement","scoreDashboard","scoreDashboardTitle","categoryNameFormatted","toUpperCase","slice","appendChild","createTextNode","scoreDashboardScoreList","players","filter","player","level","length","map","name","score","join","categoriesButton","addEventListener","$860501ca3c582cd9$export$1e85c6cc1ce7630a","questionId","question","questionLength","questionsInner","getElementsByClassName","shuffledAnswers","arr","m","i","Math","floor","random","$481159e07b18cd1e$export$448332262467e042","incorrect_answers","correct_answer","answer","answerButtons1","querySelectorAll","checkAnswer","String","event","target","textContent","classList","add","setTimeout","forEach","button","removeListeners","handleUserAnswer","removeEventListener","$b699adbaeace5679$export$85787429b4cb5fd8","playerName","playerScore","finishContainer","finishHeading","firstParagraph","secondParagraph","scoreResult","scoreHeading","scoreSpan","buttonsDiv","scoreboardButton","$5d8450040f5f15c9$export$4cec2234a9c7ce6d","push","$282c3685b8600054$export$4d41f7386211339a","timer","questions","style","display","remove","clearInterval","$91185c0d023d64bb$export$35dfb1dce4536b10","questionList","points","userName","timeleft","interval","setInterval","minutes","seconds","$282c3685b8600054$export$5985f5b4428bec55","entries","$9857f0825aaec52b$export$f4c5de44377d2946","$535a7592fe5c8de6$export$e820db9e9e2fc09b","questionCount","category_question_count","$59465b5b3b32bbbd$export$993a24ab29e7b779","total_hard_question_count","total_medium_question_count","total_easy_question_count","total_question_count","log","errorText","startButton","userInput","user","$4b4d826c9b61a0ec$var$SELECTED_CATEGORY_IDS","svg","$fc43fb26ee68d1f7$exports","categories","$parcel$interopDefault","onload","trivia_categories","$59465b5b3b32bbbd$export$7a0f33e8df10bd94"],"version":3,"file":"index.fc24435c.js.map","sourceRoot":"../"}