{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-f3dae54ae109a4ce.js","src/app/leaderboard.js","src/app/renderQuestion.js","src/app/tools.js","src/app/finishQuiz.js","src/app/timer.js","src/app/startQuiz.js","src/app/app.js","src/app/getData.js","src/app/renderCategories.js","node_modules/@parcel/runtime-js/lib/runtime-10f46069ba188ce7.js","src/app/homepage.js","src/app/index.js"],"sourcesContent":["\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('frZfc') + \"logo.d47d9aee.png\";","import { homepage } from \"./homepage\";\r\n\r\nexport const showLeaderboard = (category) => {\r\n  const leaderboard = JSON.parse(localStorage.getItem('leaderboard')).find(element => element.categoryName === category) || false;\r\n  \r\n  //CreateElements - clear section and build new view\r\n  const section = document.querySelector('section');\r\n  section.innerHTML = '';\r\n  section.className = 'score-dashboard';\r\n\r\n  const container = document.createElement('div');\r\n  container.className = 'container score-dashboard__container';\r\n\r\n  const scoreDashboard = document.createElement('div');\r\n  scoreDashboard.className = '.score-dashboard__group';\r\n\r\n  const scoreDashboardTitle = document.createElement('h3');\r\n  scoreDashboardTitle.className = 'score-dashboard__title';\r\n  const categoryNameFormatted = leaderboard.categoryName \r\n    ? leaderboard.categoryName[0].toUpperCase() + leaderboard.categoryName.slice(1)\r\n    : category[0].toUpperCase() + category.slice(1);\r\n  scoreDashboardTitle.appendChild(document.createTextNode(`Score dashboard for ${categoryNameFormatted}`));\r\n\r\n  const scoreDashboardScoreList = document.createElement('ul');\r\n  scoreDashboardScoreList.className = 'score-dashboard__player-score-list';\r\n\r\n  scoreDashboardScoreList.innerHTML = leaderboard.players ? leaderboard.players.map(player => \r\n    `<li class=\"score-dashboard__player-score\">\r\n      <span class=\"score-dashboard__game-title\">${player.name}</span>\r\n      <span class=\"score-dashboard__game-title\">${player.score}/10</span>\r\n    </li>`\r\n  ).join('') : '<p>Leaderboard for this category is empty</p>';\r\n  \r\n  const categoriesButton = document.createElement('button');\r\n  categoriesButton.className = 'button finish__button--back';\r\n  categoriesButton.appendChild(document.createTextNode('Back to categories'));\r\n\r\n  scoreDashboard.appendChild(scoreDashboardTitle);\r\n  scoreDashboard.appendChild(scoreDashboardScoreList);\r\n  scoreDashboard.appendChild(categoriesButton);\r\n\r\n  container.appendChild(scoreDashboard);\r\n\r\n  section.appendChild(container);\r\n\r\n  //EventListener - button action\r\n  categoriesButton.addEventListener('click', () => {\r\n    homepage(JSON.parse(sessionStorage.getItem('categories')));\r\n  });\r\n};","import { decodeHtmlCharCodes, shuffle } from './tools.js';\r\n\r\nexport const renderQuestion = (questionId, question, questionLength) => {\r\n  const questionsInner = document.getElementsByClassName('questions__inner')[0];\r\n\r\n  const answers = [...question.incorrect_answers, question.correct_answer];\r\n  const shuffledAnswers = shuffle(answers);\r\n  \r\n  questionsInner.innerHTML = `\r\n    <h3 class=\"questions__question\">\r\n    ${questionId + 1}/${questionLength}. ${question.question}</h3>\r\n    ${shuffledAnswers\r\n      .map((answer) => {\r\n        return `<button class=\"button questions__answer\">${answer}</button>`;\r\n      })\r\n      .join('')}\r\n    `;\r\n\r\n  const answerButtons = document.querySelectorAll('.questions__answer');\r\n\r\n  const checkAnswer = (answer) =>\r\n    answer === decodeHtmlCharCodes(question.correct_answer);\r\n\r\n  const showCorrectAnswer = () => {\r\n    const answerButtons = document.querySelectorAll('.questions__answer');\r\n\r\n    answerButtons.forEach((button) => {\r\n      if (button.textContent === question.correct_answer) {\r\n        button.classList.add('questions__answer--correct');\r\n      }\r\n    });\r\n  };\r\n\r\n  return new Promise((answer) => {\r\n    const handleUserAnswer = (event) => {\r\n      const { target } = event;\r\n\r\n      if (checkAnswer(target.textContent)) {\r\n        target.classList.add('questions__answer--correct');\r\n\r\n        setTimeout(() => {\r\n          answer(true);\r\n        }, 1000);\r\n        console.log('correct answer');\r\n      } else {\r\n        target.classList.add('questions__answer--wrong');\r\n\r\n        showCorrectAnswer();\r\n        console.log('incorrect answer');\r\n        setTimeout(() => {\r\n          answer(false);\r\n        }, 1000);\r\n      }\r\n\r\n      removeListeners();\r\n    };\r\n\r\n    answerButtons.forEach((button) => {\r\n      button.addEventListener('click', handleUserAnswer);\r\n    });\r\n\r\n    const removeListeners = () => {\r\n      answerButtons.forEach((button) => {\r\n        button.removeEventListener('click', handleUserAnswer);\r\n      });\r\n    };\r\n  });\r\n};\r\n","// decodeHtmlCharCodes used to decode string like '60&#039;s' to '60's', to compare value in sessionStorage and answer button\r\n\r\nexport const decodeHtmlCharCodes = (str) =>\r\n  str.replace(/(&#(\\d+);)/g, (match, capture, charCode) =>\r\n    String.fromCharCode(charCode),\r\n  );\r\n\r\nexport const saveDataToSessionStorage = (key, value) => {\r\n  sessionStorage.setItem(key, value);\r\n};\r\n\r\nexport const shuffle = ([...arr]) => {\r\n  let m = arr.length;\r\n  while (m) {\r\n    const i = Math.floor(Math.random() * m--);\r\n    [arr[m], arr[i]] = [arr[i], arr[m]];\r\n  }\r\n  return arr;\r\n};\r\n\r\n\r\nexport const validateUserName = (user) => {\r\n  if (user.length < 3) {\r\n    return false;\r\n  }\r\n  const usernameRegex = /^[a-zA-Z]+$/;\r\n  const isValid = user.match(usernameRegex);\r\n  return !!isValid ;\r\n};\r\n ","import { homepage } from \"./homepage\";\r\nimport { showLeaderboard } from \"./leaderboard\";\r\n\r\nexport const finishQuiz = (player, score = 0, category) => {\r\n  const playerName = player;\r\n  const playerScore = score;\r\n  const categoryName = category;\r\n\r\n  //CreateElements - clear section and build new view\r\n  const div = document.querySelector('#app');\r\n  div.innerHTML = `<section></section>`;\r\n\r\n  const section = document.querySelector('section');\r\n  section.innerHTML = '';\r\n  section.className = 'finish';\r\n\r\n  const finishContainer = document.createElement('div');\r\n  finishContainer.className = 'container';\r\n\r\n  const finishHeading = document.createElement('div');\r\n  finishHeading.className = 'finish__result';\r\n\r\n  const firstParagraph = document.createElement('p');\r\n  firstParagraph.appendChild(document.createTextNode(`It's over!`));\r\n  const secondParagraph = document.createElement('p');\r\n  secondParagraph.appendChild(document.createTextNode('Thanks for game :)'));\r\n\r\n  finishHeading.appendChild(firstParagraph);\r\n  finishHeading.appendChild(secondParagraph);\r\n\r\n  const scoreResult = document.createElement('div');\r\n  scoreResult.className = 'finish__score-group';\r\n\r\n  const scoreHeading = document.createElement('h3');\r\n  scoreHeading.appendChild(document.createTextNode('your score'));\r\n  const scoreSpan = document.createElement('span');\r\n  scoreSpan.className = 'finish__score';\r\n  scoreSpan.appendChild(document.createTextNode(`${playerScore}/10`));\r\n\r\n  scoreResult.appendChild(scoreHeading);\r\n  scoreResult.appendChild(scoreSpan);\r\n\r\n  const buttonsDiv = document.createElement('div');\r\n  buttonsDiv.className = 'finish__buttons';\r\n\r\n  const categoriesButton = document.createElement('button');\r\n  categoriesButton.className = 'button finish__button--back';\r\n  categoriesButton.appendChild(document.createTextNode('Back to categories'));\r\n  const scoreboardButton = document.createElement('button');\r\n  scoreboardButton.className = 'button finish__button--scoreboard';\r\n  scoreboardButton.appendChild(document.createTextNode('Scoreboard'));\r\n\r\n  buttonsDiv.appendChild(categoriesButton);\r\n  buttonsDiv.appendChild(scoreboardButton);\r\n\r\n  finishContainer.appendChild(finishHeading);\r\n  finishContainer.appendChild(scoreResult);\r\n  finishContainer.appendChild(buttonsDiv);\r\n\r\n  section.appendChild(finishContainer);\r\n\r\n  //EventListeners - buttons action\r\n  categoriesButton.addEventListener('click', () => {\r\n    homepage(JSON.parse(sessionStorage.getItem('categories')));\r\n  });\r\n\r\n  scoreboardButton.addEventListener('click', () => {\r\n    showLeaderboard(categoryName);\r\n  });\r\n\r\n  //LocalStorage - save player score\r\n  const leaderboard = JSON.parse(localStorage.getItem('leaderboard')) || [];\r\n  if (\r\n    leaderboard.length &&\r\n    leaderboard.find((element) => element.categoryName === categoryName)\r\n  ) {\r\n    leaderboard\r\n      .find((element) => element.categoryName === categoryName)\r\n      .players.push({\r\n        name: playerName,\r\n        score: playerScore,\r\n      });\r\n  } else {\r\n    leaderboard.push({\r\n      categoryName,\r\n      players: [\r\n        {\r\n          name: playerName,\r\n          score: playerScore,\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  localStorage.setItem('leaderboard', JSON.stringify(leaderboard));\r\n};\r\n","import { finishQuiz } from './finishQuiz.js';\r\n\r\nexport const startTimer = (questionsAmount, id) => {\r\n  const timer = document.querySelector('.questions__timer');\r\n  const questions = document.querySelector('.questions');\r\n\r\n  timer.textContent = '';\r\n  const totalTime = 60;\r\n  let timeleft = totalTime;\r\n  if (timeleft > 0) {\r\n    timer.textContent = `Time left: 1m 00s`;\r\n    const interval = setInterval(() => {\r\n      timeleft--;\r\n      let minutes = Math.floor(timeleft / 60);\r\n      let seconds = Math.floor(timeleft % 60);\r\n\r\n      timer.textContent = `Time left: ${minutes}m ${seconds}s`;\r\n\r\n      if (timeleft < 0) {\r\n        clearInterval(interval);\r\n        timer.textContent = `Time left: 0m 0s`;\r\n\r\n        timer.style.display = 'none';\r\n        questions.remove();\r\n        finishQuiz();\r\n      } else if (id === questionsAmount) {\r\n        clearInterval(interval);\r\n        timer.style.display = 'none';\r\n      }\r\n    }, 1000);\r\n    return interval;\r\n  }\r\n};\r\n\r\nexport const stopTimer = (timer) => {\r\n  const questions = document.querySelector('.questions');\r\n  const timerElem = document.querySelector('.questions__timer');\r\n  timerElem.style.display = 'none';\r\n  questions.remove();\r\n  clearInterval(timer);\r\n};\r\n","import { renderQuestion } from './renderQuestion';\r\nimport { finishQuiz } from './finishQuiz';\r\nimport { startTimer, stopTimer } from './timer';\r\n\r\nexport const startQuiz = async (questionList, categoryName) => {\r\n  const section = document.querySelector('section');\r\n  section.className = 'questions';\r\n  section.innerHTML = `\r\n    <div class=\"container\">\r\n      <div class=\"questions__timer\"></div>\r\n      <div class=\"questions__inner\"></div>\r\n    </div>\r\n  `;\r\n\r\n  const questionLength = questionList.length;\r\n  let points = 0;\r\n      \r\n  const timer = startTimer(questionLength);\r\n\r\n  for (let [id, question] of questionList.entries()) {\r\n    const answer = await renderQuestion(id, question, questionLength);\r\n    if (answer) points++;\r\n\r\n    if (id === questionLength - 1) {\r\n      stopTimer(timer);\r\n      return finishQuiz(window.userName, points, categoryName);\r\n    }\r\n  }\r\n\r\n};\r\n","import { getQuestions } from './getData.js';\r\nimport { homepage } from './homepage.js';\r\nimport { showLeaderboard } from './leaderboard.js';\r\n// import { chooseCategory } from './chooseCategory.js';\r\nimport { startQuiz } from './startQuiz.js';\r\nimport {validateUserName} from './tools.js';\r\n\r\nwindow.userName = '';\r\n\r\nexport const startApp = async (id, name) => {\r\n  const categoryID = id;\r\n  const categoryName = name;\r\n\r\n  const div = document.querySelector('#app');\r\n  div.innerHTML = `\r\n    <section class=\"game\">\r\n      <div class=\"container game__inner\">\r\n        <input class=\"game__user--name\" placeholder=\"Enter your name...\" />\r\n\r\n        <button class=\"button game__button--start-quiz\">Start Quiz</button>\r\n        <button class=\"button game__button--scores\">Scores</button>\r\n        <p class=\"game__questions-quantity\">\r\n          Total questions for ${categoryName}: 245\r\n        </p>\r\n        <button class=\"button game__button--back\">Back to categories</button>\r\n      </div>\r\n    </section>\r\n  `;\r\n\r\n  const startButton = document.getElementsByClassName(\r\n    'game__button--start-quiz',\r\n  )[0];\r\n\r\n  // TODO add chooseCategory function here\r\n  // const categoryId = chooseCategory();\r\n  // until chooseCategory is finished use id\r\n  console.log(id);\r\n  const questionList = await getQuestions(categoryID);\r\n  let errorText;\r\n\r\n  startButton.addEventListener(\r\n    'click',\r\n    () => {\r\n      //TODO validate username\r\n      const userInput = document.querySelector('.game__user--name');\r\n      window.userName = userInput.value;\r\n      const isValidUser = validateUserName(window.userName);\r\n      if(isValidUser) {\r\n         startQuiz(questionList, categoryName);\r\n      }\r\n      else {\r\n        if (errorText) {\r\n          return;\r\n        }\r\n        errorText = document.createElement('div');\r\n        errorText.classList.add('game__error');\r\n        errorText.appendChild(document.createTextNode('User Name should consist of min 3 LETTERS, and letters only.'));\r\n        userInput.parentNode.insertBefore(errorText, userInput.nextSibling);\r\n      }\r\n    },\r\n    false,\r\n  );\r\n\r\n  const scoreButton = document.querySelector('.game__button--scores');\r\n  scoreButton.addEventListener('click', () => {\r\n    showLeaderboard(categoryName);\r\n  });\r\n\r\n  const backButton = document.querySelector('.game__button--back');\r\n  backButton.addEventListener('click', () => {\r\n    homepage(JSON.parse(sessionStorage.getItem('categories')));\r\n  });\r\n};","export const getCategories = async () => {\r\n  try {\r\n    const res = await fetch('https://opentdb.com/api_category.php');\r\n    if (!res.ok) throw new Error(res.statusText);\r\n    const data = await res.json();\r\n    sessionStorage.setItem(\r\n      'categories',\r\n      JSON.stringify(data.trivia_categories),\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const getQuestions = async (categoryID) => {\r\n  try {\r\n    let path;\r\n    if (categoryID === 999) {\r\n      path = 'https://opentdb.com/api.php?amount=10';\r\n    } else {\r\n      path = `https://opentdb.com/api.php?amount=10&category=${categoryID}`;\r\n    }\r\n    const res = await fetch(path);\r\n\r\n    if (!res.ok) throw new Error(res.statusText);\r\n    const data = await res.json();\r\n    // sessionStorage.setItem(\r\n    //   'questions',\r\n    //   JSON.stringify(data.results),\r\n    // );\r\n    return data.results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// export const getQuiz = (categoryID) => {\r\n//   fetch(`https://opentdb.com/api_count.php?category=${categoryID}`)\r\n//   .then(res => res.json())\r\n//   .then(data => console.log(data))\r\n// }\r\n// jak zrobić return z tego ?\r\n","import logo from '/src/images/logo.png';\r\nimport { startApp } from './app.js';\r\n\r\nconst SELECTED_CATEGORY_IDS = [20, 14, 9, 22, 10, 15, 21, 30, 13, 16];\r\n\r\nexport const renderCategories = (categories, parentSelector) => {\r\n    const parent = document.querySelector(parentSelector);\r\n    const tiles = categories\r\n        .filter((category) => SELECTED_CATEGORY_IDS.includes(category.id))\r\n        .map((category) => `\r\n            <div class=\"card category__card\" data-id=\"${category.id}\" data-name=\"${category.name}\">\r\n                <a href=\"#\" class=\"card__link\">\r\n                <img\r\n                    src=\"${logo}\"\r\n                    alt=\"category\"\r\n                    class=\"card__image\"\r\n                />\r\n                <h2 class=\"card__name\">${category.name}</h2>\r\n                </a>\r\n            </div>`\r\n        );\r\n    \r\n    parent.innerHTML =  tiles.join('');\r\n\r\n    //temporary solution\r\n    document.querySelectorAll('.category__card').forEach(card => {\r\n      card.addEventListener('click', () => startApp(card.dataset.id, card.dataset.name));\r\n    });\r\n};\r\n","module.exports = require('./helpers/bundle-url').getBundleURL('frZfc') + \"quizownia-logo.38ae5559.png\";","import { renderCategories } from './renderCategories.js';\r\nimport logo from '/src/images/quizownia-logo.png';\r\n\r\nexport const homepage = (categories) => {\r\n  const div = document.querySelector('#app');\r\n  div.innerHTML = `\r\n    <header>\r\n      <nav class=\"navigation\">\r\n        <a href=\"/\" class=\"navigation__logo\">\r\n          <img\r\n            src=${logo}\r\n            alt=\"logo\"\r\n            class=\"navigation__img\"\r\n          />\r\n        </a>\r\n        <div class=\"navigation__menu\">\r\n          <ul class=\"navigation__list\">\r\n            <li class=\"navigation__item\">\r\n              <a href=\"#\" class=\"navigation__link far fa-clock\"></a>\r\n            </li>\r\n            <li class=\"navigation__item\">\r\n              <a href=\"#\" class=\"navigation__link fas fa-user-friends\"></a>\r\n            </li>\r\n            <li class=\"navigation__item\">\r\n              <a href=\"#\" class=\"navigation__link fas fa-cog\"></a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <svg\r\n          class=\"navigation__burger\"\r\n          viewBox=\"0 0 100 80\"\r\n          width=\"40\"\r\n          height=\"40\"\r\n        >\r\n          <rect width=\"100\" height=\"20\" fill=\"#4d70ff\"></rect>\r\n          <rect y=\"30\" width=\"100\" height=\"20\" fill=\"#4d70ff\"></rect>\r\n          <rect y=\"60\" width=\"100\" height=\"20\" fill=\"#4d70ff\"></rect>\r\n        </svg>\r\n      </nav>\r\n    </header>\r\n\r\n    <section class=\"category\">\r\n      <div class=\"container category__container\">\r\n        <div class=\"category__list\">\r\n        </div>\r\n      </div>\r\n    </section>\r\n  `;\r\n\r\n  renderCategories(categories, '.category__list');\r\n};","import { getCategories } from './getData.js';\r\nimport { homepage } from './homepage.js';\r\n\r\nwindow.onload = async () => {\r\n  // Here goes logic:\r\n  const categories = sessionStorage.getItem('categories')\r\n    ? JSON.parse(sessionStorage.getItem('categories'))\r\n    : await getCategories();\r\n  console.log(categories);\r\n\r\n  homepage(categories);\r\n};\r\n"],"names":["$feb039d0dc4b7e75$export$bdfd709ae4826697","$feb039d0dc4b7e75$var$bundleURL","$feb039d0dc4b7e75$var$getBaseURL","url","replace","id","value","Error","err","matches","stack","match","$feb039d0dc4b7e75$var$getBundleURL","$dde707c9a063adfb$exports","parcelRequire","getBundleURL","$5c6d8ca62532fd82$export$3acec85c603510fd","category","leaderboard","JSON","parse","localStorage","getItem","find","element","categoryName","section","document","querySelector","innerHTML","className","container","createElement","scoreDashboard","scoreDashboardTitle","categoryNameFormatted","toUpperCase","slice","appendChild","createTextNode","scoreDashboardScoreList","players","map","player","name","score","join","categoriesButton","addEventListener","$32d2adea6c0b7805$export$1e85c6cc1ce7630a","questionId","question","questionLength","questionsInner","getElementsByClassName","shuffledAnswers","arr","m","length","i","Math","floor","random","$d9cf4ee57cdd746b$export$448332262467e042","incorrect_answers","correct_answer","answer","answerButtons1","querySelectorAll","checkAnswer","capture","charCode","String","fromCharCode","event","target","textContent","classList","add","setTimeout","console","log","forEach","button","removeListeners","handleUserAnswer","removeEventListener","$802351d6cc09f673$export$85787429b4cb5fd8","playerName","playerScore","finishContainer","finishHeading","firstParagraph","secondParagraph","scoreResult","scoreHeading","scoreSpan","buttonsDiv","scoreboardButton","$30aabf7c2519489b$export$4cec2234a9c7ce6d","sessionStorage","push","setItem","stringify","$2d6dcb5d3d1fe385$export$4d41f7386211339a","timer","questions","style","display","remove","clearInterval","$ff7139390ac1e00f$export$35dfb1dce4536b10","async","questionList","points","questionsAmount","timeleft","interval","setInterval","minutes","seconds","$2d6dcb5d3d1fe385$export$5985f5b4428bec55","entries","window","userName","$a5b095e7e5b617cd$export$e820db9e9e2fc09b","categoryID","path","res","fetch","ok","statusText","json","results","error","$ac016b97cd97ce14$export$2a26a8aebba7a5b5","errorText","startButton","userInput","user","$af170c16392e9b40$var$SELECTED_CATEGORY_IDS","$b23b2e58fc023d33$exports","categories","parentSelector","parent","tiles","filter","includes","$parcel$interopDefault","onload","data","trivia_categories","$ac016b97cd97ce14$export$7a0f33e8df10bd94"],"version":3,"file":"index.46ab71bb.js.map","sourceRoot":"../"}